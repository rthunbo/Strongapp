<div style="max-height: 600px; overflow-y: auto; margin: 20px">
    <h5>Personal records</h5>

    @if (ExerciseCategory is StrongExerciseCategory.Dumbbell or StrongExerciseCategory.Barbell or StrongExerciseCategory.MachineOther)
    {
        <ul style="padding-left: 0">
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.OneRM))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.OneRM);
                    <span class="float-end">@record.Weight kg</span>
                }
                <span><strong>1RM</strong></span>
            </li>
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.Weight))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.Weight);
                    <span class="float-end">@record.Weight kg (x @record.Reps)</span>
                }
                <span><strong>Weight</strong></span>
            </li>
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.MaxVolume))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.MaxVolume);
                    <span class="float-end">@record.Weight kg</span>
                }
                <span><strong>Max Volume</strong></span>
            </li>
        </ul>
    }
    @if (ExerciseCategory is StrongExerciseCategory.RepsOnly or StrongExerciseCategory.AssistedBodyweight)
    {
        <ul style="padding-left: 0">
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.MaxReps))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.MaxReps);
                    <span class="float-end">@record.Reps reps</span>
                }
                <span><strong>Max Reps</strong></span>
            </li>
        </ul>
    }
    @if (ExerciseCategory is StrongExerciseCategory.WeightedBodyweight)
    {
        <ul style="padding-left: 0">
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.MaxReps))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.MaxReps);
                    <span class="float-end">@record.Reps reps</span>
                }
                <span><strong>Max Reps</strong></span>
            </li>
        </ul>

        <ul style="padding-left: 0">
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.MaxWeightAdded))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.MaxWeightAdded);
                    @if (record.Weight == 0)
                    {
                        <span class="float-end">@record.Reps reps</span>
                    }
                    else
                    {
                        <span class="float-end">+@record.Weight kg x @record.Reps</span>
                    }
                }
                <span><strong>Max Weight Added</strong></span>
            </li>
        </ul>

        <ul style="padding-left: 0">
            <li style="display: block; padding: 0.25rem;">
                @if (PersonalRecords.Any(x => x.Type == StrongPersonalRecordsType.MaxVolumeAdded))
                {
                    var record = PersonalRecords.First(x => x.Type == StrongPersonalRecordsType.MaxVolumeAdded);
                    <span class="float-end">@record.Weight kg</span>
                }
                <span><strong>Max Reps</strong></span>
            </li>
        </ul>
    }
    
    <button class="btn btn-secondary btn-sm" @onclick="ViewRecordsHistory" style="width: 100%; margin-bottom: 20px;">View Records History</button>
        
    @if (ExerciseCategory is StrongExerciseCategory.Dumbbell or StrongExerciseCategory.Barbell or StrongExerciseCategory.MachineOther)
    {
        <table class="table table-sm">
            <thead>
            <tr>
                <th>Reps</th>
                <th>Best performance</th>
                <th>Predicted</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var predictedPerformance in PredictedPerformances)
            {
                <tr>
                    <td>@predictedPerformance.Reps</td>
                    <td>
                        @if (predictedPerformance.BestPerformance != null)
                        {
                            <span>@predictedPerformance.BestPerformance.Weight kg (x @predictedPerformance.BestPerformance.Reps)</span>
                            <br/>
                            <span>@predictedPerformance.BestPerformance.Date.Value.ToShortDateString()</span>
                        }
                    </td>
                    <td>
                        @if (predictedPerformance.Predicted != null)
                        {
                            <span>@predictedPerformance.Predicted kg</span>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>